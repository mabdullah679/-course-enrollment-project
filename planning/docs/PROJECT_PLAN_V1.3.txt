PROJECT_PLAN_V1.3  
Project Plan: Abdullah's Course Enrollment & Grade Management System  
Overall Start Date: May 13, 2025  
Estimated Full Completion: September 7, 2025 (17 weeks, 119 days)  

---

PHASE 1 ‚Äî PLAN FINALIZATION & INITIALIZATION (May 13‚Äì16)

Goals:
‚Ä¢ Finalize architectural blueprint  
‚Ä¢ Set up GitHub repo with 3 main branches: dev, staging, main  
‚Ä¢ Establish clean branch-based working tree logic (not subdir-based)  
‚Ä¢ Draft and push PROJECT_PLAN_V1.2 and GOALS_AND_ROADMAP.md  

Output:
‚Ä¢ Branches created and merged: dev, staging, main  
‚Ä¢ Planning committed to `/planning` and merged to dev  
‚Ä¢ Initial roadmap and strategy committed

---

PHASE 2 ‚Äî DEV ENVIRONMENT BUILD + AUTOMATION SETUP (May 17 ‚Äì June 7)

Tech Stack:
‚Ä¢ JHipster for scaffolding gateway and microservices  
‚Ä¢ Java 21 + Spring Boot 3.4.x  
‚Ä¢ PostgreSQL (Docker-local dev DB)  
‚Ä¢ R2DBC (reactive driver)  
‚Ä¢ Maven (build tool)  
‚Ä¢ React or Vue with Vite (frontend, phased in later)  
‚Ä¢ Axios (HTTP client)  
‚Ä¢ JUnit, Mockito (unit tests)  
‚Ä¢ ESLint, Prettier, `npm-check-updates` (tooling)  
‚Ä¢ Docker + Docker Compose (local orchestration)  
‚Ä¢ GitHub Actions (CI/CD for dev/staging/prod)  
‚Ä¢ Minikube (local Kubernetes testing)  
‚Ä¢ Scripts: `dev.sh`, `reset-db.sh`, `prod-deployment.sh`

Milestones:
‚Ä¢ ‚úÖ May 17‚Äì20: Gateway app scaffolded via JHipster; ESLint + Prettier configured  
‚Ä¢ ‚úÖ May 21‚Äì24: Consul service registry stabilized; PostgreSQL container automation confirmed  
‚Ä¢ ‚úÖ May 25‚Äì28: Dev-only test endpoint added at `/api/test` (security-scoped to `permitAll`)  
‚Ä¢ ‚úÖ May 28‚Äì30: JWT flow confirmed; token auth working across endpoints  
‚Ä¢ üîú May 31‚ÄìJune 4: Unit test expansion, frontend bootstrap, Dockerization refinements  
‚Ä¢ üîú June 5‚Äì7: GitHub Actions CI for build, lint, test, docker tag (per-service scope TBD)

Additions:
‚Ä¢ `.gitignore` hardened (e.g. `.vscode/`, `target/`, `*.log`, etc.)  
‚Ä¢ Project root CI scope planning introduced  
‚Ä¢ Smart pipeline draft: detect service-level diffs and conditionally trigger build/test jobs

---

PHASE 3 ‚Äî STAGING ENVIRONMENT & QA CI/CD (June 8 ‚Äì July 1)

Pipeline:
‚Ä¢ Triggered by successful `dev` builds or merge into `staging`  
‚Ä¢ App deployed via Terraform to EC2 (App) + AWS RDS (PostgreSQL)  
‚Ä¢ E2E tests via Playwright or Cypress  
‚Ä¢ Vault or GitHub Secrets for sensitive config  
‚Ä¢ Auto blame tagging logic (QA vs Dev source of failure)  
‚Ä¢ Slack/email alerting for failed CI runs

Milestones:
‚Ä¢ June 8‚Äì14: Terraform manifests for EC2 + RDS setup  
‚Ä¢ June 15‚Äì19: Staging pipeline CI/CD + auto rollback  
‚Ä¢ June 20‚Äì27: End-to-end test suite  
‚Ä¢ June 28‚ÄìJuly 1: Blame resolver logic + alert integration

---

PHASE 4 ‚Äî PRODUCTION ENVIRONMENT BUILD & DEPLOYMENT (July 2 ‚Äì August 1)

Pipeline:
‚Ä¢ Triggered via release tag, manual approval, or merge to `main`  
‚Ä¢ Deployed using Kubernetes (EKS preferred)  
‚Ä¢ PostgreSQL via AWS RDS (prod instance)  
‚Ä¢ Certbot + NGINX for HTTPS  
‚Ä¢ DNS masking with DuckDNS or custom domain  
‚Ä¢ Vault or AWS SSM for production secrets  
‚Ä¢ Smoke testing + rollback safety net

Milestones:
‚Ä¢ July 2‚Äì10: Prod infra provisioned, TLS + DNS masked  
‚Ä¢ July 11‚Äì18: Secrets wiring + Vault injection  
‚Ä¢ July 19‚Äì26: App deployment: gateway + all microservices + frontend  
‚Ä¢ July 27‚ÄìAug 1: Infra cleanup + telemetry hooks

---

PHASE 5 ‚Äî DOCUMENTATION, POLISH & EDGE CASE COVERAGE (Aug 2 ‚Äì Aug 16)

Outputs:
‚Ä¢ `/docs/dev`, `/docs/staging`, `/docs/prod` generated and maintained  
‚Ä¢ `ERRORS_AND_LIMITATIONS.md`, `EDGE_CASES.md`, `SPRINT_LOG.md`, `RETROS.md`  
‚Ä¢ Diagrams: system architecture, CI/CD flow, DB structure  
‚Ä¢ Edge case checklist logged and validated  
‚Ä¢ Finalization of JDL visual artifacts (if applicable)

---

PHASE 6 ‚Äî FINAL AUDIT & DEMO READINESS (Aug 17 ‚Äì Sept 7)

Goals:
‚Ä¢ Full CI/CD dry-run across environments  
‚Ä¢ Final walkthrough: branch-to-environment (dev ‚Üí staging ‚Üí prod)  
‚Ä¢ Public deployment showcase (GitHub README, LinkedIn post, Resume links)  
‚Ä¢ Optional: Load test results + metrics dashboard (Grafana/Prometheus)  
‚Ä¢ Prepare job-ready project bundle

---

üîÅ Updated Overall Timeline:

| Phase               | Date Range       | Duration   |
|--------------------|------------------|------------|
| Planning & Init     | May 13 ‚Äì May 16  | 4 days     |
| Dev Build + CI      | May 17 ‚Äì June 7  | 3 weeks    |
| Staging QA + CD     | June 8 ‚Äì July 1  | 3 weeks    |
| Prod Infra + CD     | July 2 ‚Äì Aug 1   | 1 month    |
| Docs + Edge Cases   | Aug 2 ‚Äì Aug 16   | 2 weeks    |
| Final Audit + Demo  | Aug 17 ‚Äì Sept 7  | 3 weeks    |

---



